sudo: false
language: cpp

# don't re-build for tags so that [publish binary] is not re-run
# https://github.com/travis-ci/travis-ci/issues/1532
branches:
  except:
    - /^v[0-9]/

os:
- linux
- osx

compiler:
- g++
- clang

matrix:
  exclude:
  - os: osx
    compiler: g++
  - os: linux
    compiler: clang


env:
  matrix:
    # will need to specify arch here
    - NODE_VERSION="4.5.0"
    - NODE_VERSION="5.3.0"
    - NODE_VERSION="6.5.0"

addons:
  apt:
    sources:
     - george-edison55-precise-backports # cmake 3
     - ubuntu-toolchain-r-test # gcc
    packages:
     - cmake
     - cmake-data

before_install:
# check if tag exists and matches package.json
#- scripts/validate_tag.sh
#- echo $NODE_VERSION
# upgrade nvm
- rm -rf ~/.nvm/ && git clone --depth 1 https://github.com/creationix/nvm.git ~/.nvm && source ~/.nvm/nvm.sh
- nvm install $NODE_VERSION
- nvm use $NODE_VERSION
- if [[ $NODE_VERSION == "0.12" ]]; then npm install npm@2 && node_modules/.bin/npm install npm; else npm install npm; fi
- npm --version

#before_install:
#- if [[ $(uname -s) == 'Linux' ]]; then
#     export CXX="clang++-3.5";
#     export CC="clang-3.5";
#  fi;
# get commit message
#- COMMIT_MESSAGE=$(git show -s --format=%B $TRAVIS_COMMIT | tr -d '\n')
# put local node-pre-gyp on PATH
#- export PATH=./node_modules/.bin/:$PATH
# put global node-gyp on PATH
#- npm install node-gyp -g
# figure out if we should publish
#- PUBLISH_BINARY=false
# if we are building a tag then publish
#- if [[ $TRAVIS_BRANCH == `git describe --tags --always HEAD` ]]; then PUBLISH_BINARY=true; fi;
# or if we put [publish binary] in the commit message
#- if test "${COMMIT_MESSAGE#*'[publish binary]'}" != "$COMMIT_MESSAGE"; then PUBLISH_BINARY=true; fi;

install:
# linux setup
#- if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then if [ "$CXX" = "g++" ]; then export CXX="g++-4.6" CC="gcc-4.6" ;fi ;fi
# osx setup
- if [[ "$TRAVIS_OS_NAME" == "osx"   ]]; then wget --no-check-certificate http://cmake.org/files/v3.4/cmake-3.4.3-Darwin-x86_64.tar.gz  ;fi
- if [[ "$TRAVIS_OS_NAME" == "osx"   ]]; then tar -xzf cmake-3.4.3-Darwin-x86_64.tar.gz                                                 ;fi
- if [[ "$TRAVIS_OS_NAME" == "osx"   ]]; then export PATH=$PWD/cmake-3.4.3-Darwin-x86_64/CMake.app/Contents/bin:$PATH                   ;fi

# upgrade npm
- npm install npm
# go
- npm install
#- npm compile
# test our module
#- node index.js

before_script:
# if publishing, do it
#- if [[ $PUBLISH_BINARY == true ]]; then node-pre-gyp package publish; fi;
# cleanup
#- node-pre-gyp clean
#- node-gyp clean

script:
  - echo "Script running"
# if publishing, test installing from remote
#- INSTALL_RESULT=0
#- if [[ $PUBLISH_BINARY == true ]]; then INSTALL_RESULT=$(npm install --fallback-to-build=false > /dev/null)$? || true; fi;
# if install returned non zero (errored) then we first unpublish and then call false so travis will bail at this line
#- if [[ $INSTALL_RESULT != 0 ]]; then echo "returned $INSTALL_RESULT";node-pre-gyp unpublish;false; fi
# If success then we arrive here so lets clean up
#- node-pre-gyp clean

after_success:
  - echo "Success"
# if success then query and display all published binaries
#- node-pre-gyp info
